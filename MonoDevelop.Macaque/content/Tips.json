{
	"id": "editor.suggestion-mode",
	"priority": "normal",
	"title": "Suggestion mode",
	"content":
"
Setting pads to auto-hide is a great way to maximize your editing space.
Double-click on the pad header to switch auto-hiding on or off.
"
}
{
	"id": "layout.auto-hide",
	"priority": "normal",
	"title": "Auto-hidden pads",
	"content":
"
Setting pads to auto-hide is a great way to maximize your editing space.
Double-click on the pad header to switch auto-hiding on or off.
"
}
{
	"id": "layout.maximize-document",
	"priority": "normal",
	"title": "Maximize the document",
	"content":
"
When you really want to focus on your code or design, you can maximize your editing space by double-clicking on the
document tab to auto-hide all the pads at once. Double-click again to switch back, or use the
[MonoDevelop.Ide.Commands.FileTabCommands.ToggleMaximize](#command) command.
"
}
{
	"id": "layout.pin-pad",
	"priority": "normal",
	"title": "Pin search pads",
	"content":
"
To preserve your search results, click on the push-pin icon to 'pin' the pad. The next search you perform will
create a new search pad. You can pin as many pads as you want!
"
}
{
	"id": "toolbox.clipboard-history",
	"priority": "normal",
	"title": "Clipboard history",
	"content":
"
Want to use something you recently put in the clipboard with [MonoDevelop.Ide.Commands.EditCommands.Cut](#command)
or [MonoDevelop.Ide.Commands.EditCommands.Copy](#command)? The source editor keeps clipboard history in the
toolbox pad.
"
}
{
	"id": "editor.generate-code",
	"priority": "normal",
	"title": "Generate code",
	"content":
"
The [MonoDevelop.CodeGeneration.CodeGenerationCommands.ShowCodeGenerationWindow](#command) command can automatically
generate common code patterns. For example, it can generate a constructor to assign arguments to properties:

![](images/generate-code.gif)

After opening the code generation window, select a generator from the upper list with the arrow keys, then hit
[Tab](#key) to move to the lower list. Use [Space](#key) to select which items to include, then [Return](#key)
to generate the code.
"
}
{
	"id": "preferences.keybindings",
	"priority": "normal",
	"title": "Key bindings",
	"content":
"
Many commands can be activated from key bindings, which are shown beside the commands in the menus. Some commands are
not shown in the menus, and you can find these in the *Key Bindings* Preferences panel, where you can also
change or add key bindings of your own.

![](images/key-bindings.gif)
"
}
{
	"id": "solution.assemblybrowser",
	"priority": "normal",
	"title": "Assembly browser",
	"content":
"
Double-click on an assembly in your project's References to inspect its types and members with the Assembly Browser.
You can open assemblies that are not part of your project using the
[MonoDevelop.Ide.Commands.FileCommands.OpenFile](#command) command.
"
}
{
	"id": "macaque.contribute",
	"priority": "low",
	"title": "Share the love",
	"content":
"
Want to tell everyone about your favorite feature?

You can contribute tips at [mhut.ch/xs-tips](https://mhut.ch/xs-tips).
"
}
{
	"id": "macaque.moresoon",
	"priority": "low",
	"title": "Coming soon...",
	"content":
"
More tips will be coming soon!
"
}